// ***  GlametrixBold *** 
// This file contains two GFX fonts - first with Latin and second with Cyrillic chars

// For use this font with DMD_STM32 library add two lines below to your code: 

// #include "GlametrixBold12pt7b.h"
// DMD_GFX_Font GlametrixBold((uint8_t*)&GlametrixBold12pt7b,(uint8_t*)&GlametrixBold12pt8b_rus, 0x80, 13); 


const uint8_t GlametrixBold12pt7bBitmaps[] PROGMEM = {
  0xFF, 0xFF, 0xCF, 0x99, 0x90, 0x44, 0x44, 0xFF, 0x44, 0x44, 0x44, 0xFF,
  0x44, 0x44, 0x30, 0x61, 0xF7, 0xEC, 0x1E, 0x0F, 0x07, 0x85, 0xF8, 0xC1,
  0x80, 0x78, 0x11, 0x98, 0x62, 0x31, 0x84, 0x66, 0x0C, 0xD8, 0x0F, 0x30,
  0x00, 0xCF, 0x03, 0x33, 0x0C, 0x42, 0x30, 0x84, 0x61, 0x98, 0x81, 0xE0,
  0x0E, 0x03, 0x60, 0xCC, 0x08, 0x01, 0x80, 0x38, 0xCD, 0x9B, 0x1A, 0x41,
  0xCC, 0x3D, 0xDD, 0x9F, 0x10, 0xE0, 0x12, 0x64, 0xCC, 0xCC, 0xCC, 0xCC,
  0xCC, 0x46, 0x62, 0x10, 0x43, 0x08, 0x63, 0x18, 0x43, 0x18, 0xC6, 0x31,
  0x18, 0xC4, 0x22, 0x30, 0x21, 0x2A, 0xA5, 0x6C, 0x10, 0x20, 0x47, 0xF1,
  0x02, 0x04, 0x00, 0xFA, 0xFF, 0xC0, 0xF0, 0x00, 0x80, 0x60, 0x18, 0x0C,
  0x03, 0x01, 0x80, 0xC0, 0x30, 0x18, 0x06, 0x03, 0x01, 0x80, 0x60, 0x30,
  0x00, 0x3C, 0x7E, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xE3, 0x7E,
  0x3C, 0x6F, 0xB6, 0xDB, 0x6D, 0xB0, 0x7C, 0x6E, 0x02, 0x03, 0x06, 0x0E,
  0x1C, 0x38, 0x30, 0x60, 0x7F, 0xFF, 0xF1, 0xF8, 0x30, 0x67, 0x8E, 0x03,
  0x06, 0x06, 0x1B, 0xF7, 0x80, 0x07, 0x07, 0x86, 0xC3, 0x63, 0x31, 0x99,
  0x8C, 0xC6, 0xFF, 0x81, 0x80, 0xC0, 0x60, 0xFD, 0xFB, 0x06, 0x0E, 0x1F,
  0x83, 0x83, 0x06, 0x0F, 0xF7, 0xC0, 0x1E, 0x76, 0xE0, 0xC0, 0xDE, 0xFF,
  0xC3, 0xC3, 0xC3, 0xE3, 0x76, 0x3C, 0xFF, 0xFE, 0x06, 0x0C, 0x0C, 0x08,
  0x18, 0x18, 0x18, 0x30, 0x30, 0x30, 0x3C, 0x7E, 0xC3, 0xC3, 0x66, 0x3C,
  0x7E, 0xC3, 0x83, 0xC3, 0xEF, 0x7C, 0x78, 0xEE, 0xC6, 0xC3, 0xC3, 0xC7,
  0xEF, 0x7B, 0x03, 0x06, 0x4C, 0x78, 0xF0, 0x0F, 0xF0, 0x0F, 0xA0, 0x00,
  0x11, 0xCE, 0x60, 0xE1, 0xC1, 0x00, 0xFF, 0xFC, 0x07, 0xFF, 0xE0, 0x03,
  0x0E, 0x0E, 0x1D, 0xCE, 0x20, 0x00, 0xFA, 0x70, 0xC3, 0x1C, 0xE3, 0x18,
  0x60, 0x06, 0x18, 0x07, 0xC0, 0x73, 0xC3, 0x01, 0x98, 0x02, 0xC7, 0xCF,
  0x31, 0x19, 0x84, 0x66, 0x11, 0x98, 0xC6, 0x63, 0x1D, 0x94, 0xF3, 0x9E,
  0x60, 0x00, 0xE0, 0x81, 0xFE, 0x00, 0x0E, 0x03, 0x80, 0xA0, 0x6C, 0x1B,
  0x04, 0x43, 0x18, 0xC6, 0x3F, 0x98, 0x36, 0x0D, 0x83, 0xFC, 0x67, 0x30,
  0xD8, 0x6C, 0x67, 0xE3, 0x19, 0x86, 0xC3, 0xE1, 0xB3, 0xDF, 0xC0, 0x1F,
  0x7F, 0x60, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x60, 0x7F, 0x1F, 0xFC,
  0x67, 0xB0, 0xF8, 0x3C, 0x1E, 0x0F, 0x07, 0x83, 0xC1, 0xE1, 0xB3, 0xDF,
  0x80, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xB0, 0x60, 0xC1, 0x83, 0xFF, 0xF0,
  0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xBF, 0x60, 0xC1, 0x83, 0x06, 0x00, 0x1F,
  0x7F, 0x60, 0xC0, 0xC0, 0xC0, 0xC7, 0xC1, 0xC1, 0x61, 0x7F, 0x1F, 0xC1,
  0xE0, 0xF0, 0x78, 0x3C, 0x1F, 0xFF, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78,
  0x30, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xC3, 0x0C, 0x30, 0xC3, 0x0C, 0x6B,
  0xBC, 0xC3, 0x63, 0xB1, 0x99, 0x8D, 0x86, 0xC3, 0x61, 0x98, 0xCE, 0x63,
  0x31, 0xD8, 0x70, 0xC1, 0x83, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC1, 0x83,
  0xFF, 0xF0, 0xE0, 0x1F, 0x01, 0xFC, 0x1F, 0xE0, 0xFD, 0x8D, 0xEC, 0x6F,
  0x36, 0x79, 0xB3, 0xC7, 0x1E, 0x38, 0xF0, 0x87, 0x84, 0x30, 0xC1, 0xF0,
  0xFC, 0x7E, 0x3F, 0x9E, 0xCF, 0x37, 0x9F, 0xC7, 0xE3, 0xF0, 0xF8, 0x30,
  0x1E, 0x1F, 0xC6, 0x1B, 0x06, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC1, 0xB8,
  0x67, 0xF0, 0x78, 0xFC, 0xCF, 0xC3, 0xC3, 0xC3, 0xC7, 0xFE, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0x1E, 0x1F, 0xC6, 0x1B, 0x06, 0xC0, 0xF0, 0x3C, 0x0F,
  0x03, 0xC1, 0xBA, 0x67, 0xF0, 0xD8, 0x06, 0x01, 0x80, 0x30, 0xFE, 0x67,
  0xB0, 0xD8, 0x6C, 0x37, 0xE3, 0x39, 0x86, 0xC3, 0x61, 0xB0, 0xD8, 0x60,
  0x3E, 0xF6, 0xC0, 0xC0, 0xF0, 0x7C, 0x1E, 0x07, 0x03, 0x83, 0xEF, 0x7C,
  0xFF, 0xFF, 0xC3, 0x01, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x03,
  0x01, 0x80, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0x7F, 0x3C, 0xE1, 0xD8, 0x66, 0x19, 0xC6, 0x33, 0x8C, 0xC3, 0x30, 0x6C,
  0x1A, 0x07, 0x80, 0xE0, 0x30, 0xE1, 0x86, 0xC3, 0x1D, 0x8E, 0x33, 0x1C,
  0x63, 0x3C, 0xC6, 0x59, 0x8D, 0xB6, 0x1B, 0x2C, 0x16, 0x58, 0x38, 0xE0,
  0x71, 0xC0, 0x61, 0x80, 0x61, 0x8C, 0xE3, 0x30, 0x78, 0x1E, 0x03, 0x00,
  0xE0, 0x78, 0x1B, 0x0C, 0xC7, 0x19, 0x87, 0x61, 0xD8, 0x63, 0x18, 0xCC,
  0x1B, 0x07, 0x80, 0xE0, 0x30, 0x0C, 0x03, 0x00, 0xC0, 0x30, 0x7F, 0xBF,
  0x81, 0xC0, 0xC0, 0xE0, 0x60, 0x70, 0x30, 0x38, 0x18, 0x1F, 0xEF, 0xF0,
  0xFC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xF0, 0x40,
  0x18, 0x06, 0x00, 0xC0, 0x30, 0x06, 0x00, 0xC0, 0x30, 0x06, 0x01, 0x80,
  0x30, 0x06, 0x01, 0x80, 0x30, 0xF3, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33,
  0x33, 0x33, 0x33, 0xF0, 0x20, 0x87, 0x36, 0x88, 0xFF, 0xFC, 0x98, 0x80,
  0x7B, 0xE7, 0xC3, 0xC3, 0xC3, 0xC7, 0xEF, 0x7B, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xDE, 0xE7, 0xC3, 0xC3, 0xC3, 0xE3, 0xF7, 0xDE, 0x3D, 0xFC, 0x30,
  0xC3, 0x0F, 0xCF, 0x03, 0x03, 0x03, 0x03, 0x03, 0x7B, 0xE7, 0xC3, 0xC3,
  0xC3, 0xC7, 0xEF, 0x7B, 0x3D, 0xDF, 0x0D, 0xFC, 0x18, 0x39, 0x1E, 0x7B,
  0x71, 0x8C, 0x7F, 0x18, 0xC6, 0x31, 0x8C, 0x00, 0x7B, 0xE7, 0xC3, 0xC3,
  0xC3, 0xC7, 0xEF, 0x7B, 0x03, 0x03, 0x06, 0x6E, 0x78, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xDE, 0xF7, 0xE3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xF0, 0xFF,
  0xFF, 0x18, 0xC0, 0x01, 0x8C, 0x63, 0x18, 0xC6, 0x31, 0x8C, 0x7F, 0xF0,
  0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06, 0x3B, 0x19, 0x98, 0xD8, 0x6C, 0x33,
  0x18, 0xCC, 0x30, 0xFF, 0xFF, 0xFF, 0xC0, 0xDE, 0x73, 0xDF, 0xEE, 0x30,
  0xF0, 0xC3, 0xC3, 0x0F, 0x0C, 0x3C, 0x30, 0xF0, 0xC3, 0xDE, 0xF7, 0xE3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x3C, 0xEE, 0xC7, 0xC3, 0xC3, 0xC3, 0xEE,
  0x3C, 0xDE, 0xE7, 0xC3, 0xC3, 0xC3, 0xE3, 0xF7, 0xDE, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0x7B, 0xE7, 0xC3, 0xC3, 0xC3, 0xC7, 0xEF, 0x7B, 0x03, 0x03,
  0x03, 0x03, 0x03, 0xDF, 0xFE, 0x30, 0xC3, 0x0C, 0x30, 0x7F, 0xBC, 0x3E,
  0x3C, 0x1C, 0xFE, 0x46, 0x31, 0xFC, 0x63, 0x18, 0xC7, 0x1E, 0xC3, 0xC3,
  0xC3, 0xC3, 0xC3, 0xC3, 0xEF, 0x7B, 0x63, 0xB1, 0x9C, 0xC6, 0x63, 0x60,
  0xB0, 0x70, 0x18, 0x63, 0x19, 0x8C, 0x66, 0x79, 0x89, 0xEC, 0x34, 0xB0,
  0xF2, 0xC1, 0xCE, 0x06, 0x18, 0x73, 0x8C, 0xC1, 0xE0, 0x30, 0x1C, 0x07,
  0x83, 0x31, 0x86, 0x63, 0xB1, 0x98, 0xC6, 0x43, 0x60, 0xF0, 0x70, 0x18,
  0x08, 0x0C, 0x0C, 0x1E, 0x0C, 0x00, 0x7F, 0x06, 0x0C, 0x0C, 0x18, 0x30,
  0x60, 0x7F, 0x0C, 0x61, 0x86, 0x10, 0xC3, 0x0C, 0x30, 0x8C, 0x08, 0x30,
  0xC3, 0x0C, 0x10, 0x61, 0x86, 0x0C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC,
  0xC1, 0x82, 0x0C, 0x30, 0xC3, 0x0C, 0x30, 0x40, 0xC4, 0x30, 0xC3, 0x0C,
  0x30, 0xC2, 0x18, 0xC0, 0xE7, 0xC4, 0xFF, 0xE0, 0x38, 0x0E, 0x03, 0x80,
  0xE0, 0x38, 0x0E, 0x03, 0x80, 0xE0, 0x3F, 0xFC };

const GFXglyph GlametrixBold12pt7bGlyphs[] PROGMEM = {
  {     0,   0,   0,   4,    0,    1 },   // 0x20 ' '
  {     0,   2,  12,   4,    1,  -11 },   // 0x21 '!'
  {     3,   4,   3,   6,    1,  -11 },   // 0x22 '"'
  {     5,   8,   9,   9,    1,   -9 },   // 0x23 '#'
  {    14,   7,  12,   8,    1,  -11 },   // 0x24 '$'
  {    25,  15,  12,  17,    1,  -11 },   // 0x25 '%'
  {    48,  11,  12,  12,    0,  -11 },   // 0x26 '&'
  {    65,   1,   3,   3,    1,  -11 },   // 0x27 '''
  {    66,   4,  19,   5,    1,  -14 },   // 0x28 '('
  {    76,   5,  19,   5,    0,  -14 },   // 0x29 ')'
  {    88,   5,   6,   7,    1,  -11 },   // 0x2A '*'
  {    92,   7,   7,   8,    1,   -8 },   // 0x2B '+'
  {    99,   2,   4,   4,    1,   -1 },   // 0x2C ','
  {   100,   5,   2,   6,    0,   -5 },   // 0x2D '-'
  {   102,   2,   2,   4,    1,   -1 },   // 0x2E '.'
  {   103,  10,  14,  10,    0,  -12 },   // 0x2F '/'
  {   121,   8,  12,  10,    1,  -11 },   // 0x30 '0'
  {   133,   3,  12,   5,    1,  -11 },   // 0x31 '1'
  {   138,   8,  12,   8,    0,  -11 },   // 0x32 '2'
  {   150,   7,  12,   8,    1,  -11 },   // 0x33 '3'
  {   161,   9,  12,   9,    0,  -11 },   // 0x34 '4'
  {   175,   7,  12,   9,    1,  -11 },   // 0x35 '5'
  {   186,   8,  12,  10,    1,  -11 },   // 0x36 '6'
  {   198,   8,  12,   8,    0,  -11 },   // 0x37 '7'
  {   210,   8,  12,  10,    1,  -11 },   // 0x38 '8'
  {   222,   8,  12,  10,    1,  -11 },   // 0x39 '9'
  {   234,   2,   8,   4,    1,   -7 },   // 0x3A ':'
  {   236,   2,  10,   4,    1,   -7 },   // 0x3B ';'
  {   239,   6,   9,   7,    0,   -9 },   // 0x3C '<'
  {   246,   7,   5,   8,    1,   -7 },   // 0x3D '='
  {   251,   6,   9,   7,    1,   -9 },   // 0x3E '>'
  {   258,   6,  12,   8,    1,  -11 },   // 0x3F '?'
  {   267,  14,  15,  16,    1,  -11 },   // 0x40 '@'
  {   294,  10,  12,  11,    0,  -11 },   // 0x41 'A'
  {   309,   9,  12,  10,    1,  -11 },   // 0x42 'B'
  {   323,   8,  12,   9,    1,  -11 },   // 0x43 'C'
  {   335,   9,  12,  11,    1,  -11 },   // 0x44 'D'
  {   349,   7,  12,   9,    1,  -11 },   // 0x45 'E'
  {   360,   7,  12,   9,    1,  -11 },   // 0x46 'F'
  {   371,   8,  12,  10,    1,  -11 },   // 0x47 'G'
  {   383,   9,  12,  11,    1,  -11 },   // 0x48 'H'
  {   397,   2,  12,   5,    1,  -11 },   // 0x49 'I'
  {   400,   6,  12,   8,    1,  -11 },   // 0x4A 'J'
  {   409,   9,  12,  11,    1,  -11 },   // 0x4B 'K'
  {   423,   7,  12,   9,    1,  -11 },   // 0x4C 'L'
  {   434,  13,  12,  15,    1,  -11 },   // 0x4D 'M'
  {   454,   9,  12,  11,    1,  -11 },   // 0x4E 'N'
  {   468,  10,  12,  12,    1,  -11 },   // 0x4F 'O'
  {   483,   8,  12,  10,    1,  -11 },   // 0x50 'P'
  {   495,  10,  15,  12,    1,  -11 },   // 0x51 'Q'
  {   514,   9,  12,  10,    1,  -11 },   // 0x52 'R'
  {   528,   8,  12,  10,    1,  -11 },   // 0x53 'S'
  {   540,   9,  12,  10,    0,  -11 },   // 0x54 'T'
  {   554,   8,  12,  10,    1,  -11 },   // 0x55 'U'
  {   566,  10,  12,  10,    0,  -11 },   // 0x56 'V'
  {   581,  15,  12,  16,    0,  -11 },   // 0x57 'W'
  {   604,  10,  12,  10,    0,  -11 },   // 0x58 'X'
  {   619,  10,  12,  10,    0,  -11 },   // 0x59 'Y'
  {   634,   9,  12,  10,    0,  -11 },   // 0x5A 'Z'
  {   648,   4,  21,   6,    1,  -15 },   // 0x5B '['
  {   659,  10,  14,  10,    0,  -12 },   // 0x5C '\'
  {   677,   4,  21,   6,    0,  -15 },   // 0x5D ']'
  {   688,   6,   5,   7,    1,  -11 },   // 0x5E '^'
  {   692,   7,   2,   8,    0,    6 },   // 0x5F '_'
  {   694,   3,   3,   4,    1,  -10 },   // 0x60 '`'
  {   696,   8,   8,  10,    1,   -7 },   // 0x61 'a'
  {   704,   8,  13,  10,    1,  -12 },   // 0x62 'b'
  {   717,   6,   8,   8,    1,   -7 },   // 0x63 'c'
  {   723,   8,  13,  10,    1,  -12 },   // 0x64 'd'
  {   736,   7,   8,   9,    1,   -7 },   // 0x65 'e'
  {   743,   5,  13,   6,    1,  -12 },   // 0x66 'f'
  {   752,   8,  13,  10,    1,   -7 },   // 0x67 'g'
  {   765,   8,  13,  10,    1,  -12 },   // 0x68 'h'
  {   778,   2,  12,   4,    1,  -11 },   // 0x69 'i'
  {   781,   5,  17,   4,   -2,  -11 },   // 0x6A 'j'
  {   792,   9,  13,  10,    1,  -12 },   // 0x6B 'k'
  {   807,   2,  13,   4,    1,  -12 },   // 0x6C 'l'
  {   811,  14,   8,  16,    1,   -7 },   // 0x6D 'm'
  {   825,   8,   8,  10,    1,   -7 },   // 0x6E 'n'
  {   833,   8,   8,   9,    1,   -7 },   // 0x6F 'o'
  {   841,   8,  13,  10,    1,   -7 },   // 0x70 'p'
  {   854,   8,  13,  10,    1,   -7 },   // 0x71 'q'
  {   867,   6,   8,   7,    1,   -7 },   // 0x72 'r'
  {   873,   6,   8,   8,    1,   -7 },   // 0x73 's'
  {   879,   5,  11,   7,    1,  -10 },   // 0x74 't'
  {   886,   8,   8,  10,    1,   -7 },   // 0x75 'u'
  {   894,   9,   8,   9,    0,   -7 },   // 0x76 'v'
  {   903,  14,   8,  14,    0,   -7 },   // 0x77 'w'
  {   917,  10,   8,  10,    0,   -7 },   // 0x78 'x'
  {   927,   9,  13,   9,    0,   -7 },   // 0x79 'y'
  {   942,   8,   8,   9,    0,   -7 },   // 0x7A 'z'
  {   950,   6,  21,   6,    0,  -15 },   // 0x7B '{'
  {   966,   2,  23,   6,    2,  -15 },   // 0x7C '|'
  {   972,   6,  21,   6,    0,  -15 },   // 0x7D '}'
  {   988,   5,   3,   7,    1,   -6 },   // 0x7E '~'
  {   990,  10,  11,  12,    1,  -10 } }; // 0x7F

const GFXfont GlametrixBold12pt7b PROGMEM = {
  (uint8_t  *)GlametrixBold12pt7bBitmaps,
  (GFXglyph *)GlametrixBold12pt7bGlyphs,
  0x20, 0x7F, 25 };

// Approx. 1683 bytes


const uint8_t GlametrixBold12pt8bBitmaps_rus[] PROGMEM = {
  0x0E, 0x03, 0x80, 0xA0, 0x6C, 0x1B, 0x04, 0x43, 0x18, 0xC6, 0x3F, 0x98,
  0x36, 0x0D, 0x83, 0xFE, 0xC0, 0xC0, 0xC0, 0xC0, 0xFC, 0xCF, 0xC3, 0xC3,
  0xC3, 0xCF, 0xFC, 0xFC, 0x67, 0x30, 0xD8, 0x6C, 0x67, 0xE3, 0x19, 0x86,
  0xC3, 0xE1, 0xB3, 0xDF, 0xC0, 0xFF, 0xFF, 0x06, 0x0C, 0x18, 0x30, 0x60,
  0xC1, 0x83, 0x06, 0x00, 0x1F, 0xC1, 0x8C, 0x18, 0xC1, 0x8C, 0x18, 0xC1,
  0x8C, 0x18, 0xC1, 0x8C, 0x18, 0xC1, 0x8C, 0x30, 0xCF, 0xFF, 0xC0, 0x3C,
  0x03, 0xC0, 0x30, 0xFF, 0xFF, 0x06, 0x0C, 0x1F, 0xB0, 0x60, 0xC1, 0x83,
  0xFF, 0xF0, 0x61, 0x86, 0x31, 0x8C, 0x19, 0x9C, 0x19, 0x98, 0x0D, 0xB0,
  0x07, 0xA0, 0x05, 0xB0, 0x0D, 0xB0, 0x19, 0x98, 0x39, 0x8C, 0x71, 0x8E,
  0x61, 0x87, 0xF9, 0xF8, 0x30, 0x67, 0x8F, 0x03, 0x03, 0x06, 0x0F, 0xF7,
  0xC0, 0xC1, 0xE1, 0xF0, 0xF8, 0xFC, 0xFE, 0x6F, 0x67, 0xB3, 0xF1, 0xF8,
  0xF8, 0x78, 0x30, 0x22, 0x1B, 0x07, 0x00, 0x0C, 0x1E, 0x1F, 0x0F, 0x8F,
  0xCF, 0xE6, 0xF6, 0x7B, 0x3F, 0x1F, 0x8F, 0x87, 0x83, 0xC3, 0x63, 0xB1,
  0x99, 0x8D, 0x86, 0xC3, 0x61, 0x98, 0xCE, 0x63, 0x31, 0xD8, 0x70, 0x3F,
  0xCC, 0x33, 0x0C, 0xC3, 0x30, 0xCC, 0x33, 0x0C, 0xC3, 0x30, 0xCC, 0x3F,
  0x0F, 0x03, 0xE0, 0x1F, 0x01, 0xFC, 0x1F, 0xE0, 0xFD, 0x8D, 0xEC, 0x6F,
  0x36, 0x79, 0xB3, 0xC7, 0x1E, 0x38, 0xF0, 0x87, 0x84, 0x30, 0xC1, 0xE0,
  0xF0, 0x78, 0x3C, 0x1F, 0xFF, 0x07, 0x83, 0xC1, 0xE0, 0xF0, 0x78, 0x30,
  0x1E, 0x1F, 0xC6, 0x1B, 0x06, 0xC0, 0xF0, 0x3C, 0x0F, 0x03, 0xC1, 0xB8,
  0x67, 0xF0, 0x78, 0xFF, 0xE0, 0xF0, 0x78, 0x3C, 0x1E, 0x0F, 0x07, 0x83,
  0xC1, 0xE0, 0xF0, 0x78, 0x30, 0xFC, 0xCF, 0xC3, 0xC3, 0xC3, 0xC7, 0xFE,
  0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0x1F, 0x7F, 0x60, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0x60, 0x7F, 0x1F, 0xFF, 0xFF, 0xC3, 0x01, 0x80, 0xC0, 0x60,
  0x30, 0x18, 0x0C, 0x06, 0x03, 0x01, 0x80, 0x61, 0xB0, 0xCC, 0xC6, 0x61,
  0x20, 0xF0, 0x78, 0x18, 0x0C, 0x04, 0x1E, 0x0C, 0x00, 0x06, 0x00, 0x60,
  0x3F, 0xC7, 0x6E, 0x66, 0x64, 0x63, 0xC6, 0x26, 0x66, 0x76, 0xE3, 0xFC,
  0x06, 0x00, 0x60, 0x61, 0x8C, 0xE3, 0x30, 0x78, 0x1E, 0x03, 0x00, 0xE0,
  0x78, 0x1B, 0x0C, 0xC7, 0x19, 0x87, 0xC1, 0x98, 0x33, 0x06, 0x60, 0xCC,
  0x19, 0x83, 0x30, 0x66, 0x0C, 0xC1, 0x98, 0x33, 0x06, 0x7F, 0xF0, 0x06,
  0x00, 0xC0, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0x7F, 0x3F, 0x03, 0x03,
  0x03, 0x03, 0xC3, 0x1E, 0x18, 0xF0, 0xC7, 0x86, 0x3C, 0x31, 0xE1, 0x8F,
  0x0C, 0x78, 0x63, 0xC3, 0x1E, 0x18, 0xF0, 0xC7, 0xFF, 0xF0, 0xC6, 0x1B,
  0x18, 0x6C, 0x61, 0xB1, 0x86, 0xC6, 0x1B, 0x18, 0x6C, 0x61, 0xB1, 0x86,
  0xC6, 0x1B, 0x18, 0x6C, 0x61, 0xBF, 0xFF, 0x00, 0x04, 0x00, 0x10, 0xF8,
  0x03, 0x00, 0x60, 0x0C, 0x01, 0x80, 0x30, 0x07, 0xE0, 0xC6, 0x18, 0xE3,
  0x18, 0x67, 0x0F, 0xC0, 0xC0, 0x78, 0x0F, 0x01, 0xE0, 0x3C, 0x07, 0x80,
  0xFF, 0x9E, 0x3B, 0xC3, 0x78, 0x6F, 0x3D, 0xFE, 0x30, 0xC0, 0xC0, 0xC0,
  0xC0, 0xC0, 0xC0, 0xFE, 0xC7, 0xC3, 0xC3, 0xCF, 0xFC, 0xF8, 0xFC, 0x0E,
  0x06, 0x07, 0x7F, 0x7F, 0x07, 0x06, 0x0E, 0xFC, 0xF8, 0xC1, 0xE3, 0x1F,
  0xCC, 0x61, 0xB3, 0x06, 0xCC, 0x0F, 0x30, 0x3F, 0xC0, 0xF3, 0x03, 0xCC,
  0x1B, 0x38, 0x6C, 0x7F, 0x30, 0x78, 0x3F, 0x73, 0xC3, 0xC3, 0xC3, 0x73,
  0x3F, 0x1B, 0x1B, 0x33, 0xF3, 0xC3, 0x7B, 0xE7, 0xC3, 0xC3, 0xC3, 0xC7,
  0xEF, 0x7B, 0x1E, 0x70, 0x60, 0xC0, 0xDC, 0xF7, 0xC3, 0xC3, 0xC3, 0xC3,
  0x76, 0x3C, 0xFC, 0xC6, 0xC6, 0xF8, 0xCE, 0xC3, 0xC6, 0xFC, 0xFF, 0x0C,
  0x30, 0xC3, 0x0C, 0x30, 0x1F, 0x86, 0x61, 0x98, 0x66, 0x19, 0x84, 0x63,
  0x1B, 0xFF, 0xC0, 0x70, 0x1C, 0x04, 0x3D, 0xDF, 0x0D, 0xFC, 0x18, 0x39,
  0x1E, 0x71, 0x8C, 0x63, 0x30, 0x66, 0xC0, 0x6F, 0x00, 0xDE, 0x03, 0x36,
  0x0C, 0x66, 0x30, 0xC6, 0xF2, 0x61, 0x9C, 0x38, 0x39, 0xFE, 0xC3, 0xC7,
  0xCF, 0xDB, 0xFB, 0xF3, 0xE3, 0xC3, 0x64, 0x24, 0x38, 0x00, 0x00, 0xC3,
  0xC7, 0xCF, 0xDB, 0xFB, 0xF3, 0xE3, 0xC3, 0xC7, 0x63, 0x33, 0x1B, 0x0D,
  0x86, 0x63, 0x19, 0x86, 0x3F, 0x98, 0xCC, 0x66, 0x33, 0x19, 0x8F, 0xC7,
  0x83, 0xC0, 0xFC, 0x1F, 0xC7, 0xF9, 0xBD, 0xB7, 0x9C, 0xF3, 0x1E, 0x23,
  0xC3, 0xC3, 0xC3, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0x3C, 0xEE, 0xC7, 0xC3,
  0xC3, 0xC3, 0xEE, 0x3C, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3,
  0xDE, 0xE7, 0xC3, 0xC3, 0xC3, 0xE3, 0xF7, 0xDE, 0xC0, 0xC0, 0xC0, 0xC0,
  0xC0, 0x3D, 0xFC, 0x30, 0xC3, 0x0F, 0xCF, 0xFF, 0x18, 0x18, 0x18, 0x18,
  0x18, 0x18, 0x18, 0x63, 0xB1, 0x98, 0xC6, 0x43, 0x60, 0xF0, 0x70, 0x18,
  0x08, 0x0C, 0x0C, 0x1E, 0x0C, 0x00, 0x03, 0x00, 0x0C, 0x00, 0x30, 0x00,
  0xC0, 0x03, 0x01, 0xEF, 0xCE, 0x71, 0xB0, 0xC3, 0xC3, 0x0F, 0x0C, 0x3C,
  0x70, 0xFB, 0xFE, 0x7B, 0x70, 0x0C, 0x00, 0x30, 0x00, 0xC0, 0x03, 0x00,
  0x0C, 0x00, 0x73, 0x8C, 0xC1, 0xE0, 0x30, 0x1C, 0x07, 0x83, 0x31, 0x86,
  0xC6, 0x63, 0x31, 0x98, 0xCC, 0x66, 0x33, 0x19, 0xFF, 0x01, 0x80, 0xC0,
  0xC7, 0x8F, 0x1E, 0x37, 0xE0, 0xC1, 0x83, 0xC6, 0x3C, 0x63, 0xC6, 0x3C,
  0x63, 0xC6, 0x3C, 0x63, 0xC6, 0x3F, 0xFF, 0xC6, 0x33, 0x18, 0xCC, 0x63,
  0x31, 0x8C, 0xC6, 0x33, 0x18, 0xCC, 0x63, 0x3F, 0xFF, 0x00, 0x0C, 0x00,
  0x30, 0xF0, 0x18, 0x0C, 0x07, 0xF3, 0x19, 0x8C, 0xCE, 0x7E, 0xC0, 0xF0,
  0x3C, 0x0F, 0xF3, 0xC6, 0xF1, 0xBC, 0xEF, 0xF3, 0xC1, 0x83, 0x07, 0xEC,
  0x78, 0xF3, 0xFE, 0xF3, 0xF0, 0xC3, 0x7C, 0x3F, 0xFC, 0xC3, 0xCC, 0xEE,
  0xCC, 0x7C, 0xC3, 0xFC, 0x3C, 0xC3, 0xCE, 0xEC, 0x7C, 0x7F, 0xCF, 0x1E,
  0x37, 0xE6, 0xF9, 0xE3 };

const GFXglyph GlametrixBold12pt8bGlyphs_rus[] PROGMEM = {
  {     0,  10,  12,  11,    0,  -11 },   // 0x410
  {    15,   8,  12,  10,    1,  -11 },   // 0x411
  {    27,   9,  12,  10,    1,  -11 },   // 0x412
  {    41,   7,  12,   9,    1,  -11 },   // 0x413
  {    52,  12,  15,  12,    0,  -11 },   // 0x414
  {    75,   7,  12,   9,    1,  -11 },   // 0x415
  {    86,  16,  12,  16,    0,  -11 },   // 0x416
  {   110,   7,  12,   9,    1,  -11 },   // 0x417
  {   121,   9,  12,  11,    1,  -11 },   // 0x418
  {   135,   9,  16,  11,    1,  -15 },   // 0x419
  {   153,   9,  12,  11,    1,  -11 },   // 0x41A
  {   167,  10,  12,  11,    0,  -11 },   // 0x41B
  {   182,  13,  12,  15,    1,  -11 },   // 0x41C
  {   202,   9,  12,  11,    1,  -11 },   // 0x41D
  {   216,  10,  12,  12,    1,  -11 },   // 0x41E
  {   231,   9,  12,  11,    1,  -11 },   // 0x41F
  {   245,   8,  12,  10,    1,  -11 },   // 0x420
  {   257,   8,  12,   9,    1,  -11 },   // 0x421
  {   269,   9,  12,  10,    0,  -11 },   // 0x422
  {   283,   9,  12,  10,    0,  -11 },   // 0x423
  {   297,  12,  12,  12,    0,  -11 },   // 0x424
  {   315,  10,  12,  10,    0,  -11 },   // 0x425
  {   330,  11,  14,  12,    1,  -11 },   // 0x426
  {   350,   8,  12,  10,    1,  -11 },   // 0x427
  {   362,  13,  12,  15,    1,  -11 },   // 0x428
  {   382,  14,  14,  16,    1,  -11 },   // 0x429
  {   407,  11,  12,  11,    0,  -11 },   // 0x42A
  {   424,  11,  12,  14,    1,  -11 },   // 0x42B
  {   441,   8,  12,  10,    1,  -11 },   // 0x42C
  {   453,   8,  12,   9,    1,  -11 },   // 0x42D
  {   465,  14,  12,  16,    1,  -11 },   // 0x42E
  {   486,   8,  12,  10,    1,  -11 },   // 0x42F
  {   498,   8,   8,  10,    1,   -7 },   // 0x430
  {   506,   8,  12,  10,    1,  -11 },   // 0x431
  {   518,   8,   8,   9,    1,   -7 },   // 0x432
  {   526,   6,   8,   8,    1,   -7 },   // 0x433
  {   532,  10,  11,  11,    0,   -7 },   // 0x434
  {   546,   7,   8,   9,    1,   -7 },   // 0x435
  {   553,  15,   8,  15,    0,   -7 },   // 0x436
  {   568,   6,   8,   8,    1,   -7 },   // 0x437
  {   574,   8,   8,  10,    1,   -7 },   // 0x438
  {   582,   8,  13,  10,    1,  -12 },   // 0x439
  {   595,   9,   8,  10,    1,   -7 },   // 0x43A
  {   604,   9,   8,  10,    0,   -7 },   // 0x43B
  {   613,  11,   8,  13,    1,   -7 },   // 0x43C
  {   624,   8,   8,  10,    1,   -7 },   // 0x43D
  {   632,   8,   8,   9,    1,   -7 },   // 0x43E
  {   640,   8,   8,  10,    1,   -7 },   // 0x43F
  {   648,   8,  13,  10,    1,   -7 },   // 0x440
  {   661,   6,   8,   8,    1,   -7 },   // 0x441
  {   667,   8,   8,   8,    0,   -7 },   // 0x442
  {   675,   9,  13,   9,    0,   -7 },   // 0x443
  {   690,  14,  18,  16,    1,  -12 },   // 0x444
  {   722,  10,   8,  10,    0,   -7 },   // 0x445
  {   732,   9,  10,  10,    1,   -7 },   // 0x446
  {   744,   7,   8,   9,    1,   -7 },   // 0x447
  {   751,  12,   8,  14,    1,   -7 },   // 0x448
  {   763,  14,  10,  15,    1,   -7 },   // 0x449
  {   781,   9,   8,  10,    0,   -7 },   // 0x44A
  {   790,  10,   8,  12,    1,   -7 },   // 0x44B
  {   800,   7,   8,   9,    1,   -7 },   // 0x44C
  {   807,   6,   8,   8,    1,   -7 },   // 0x44D
  {   813,  12,   8,  13,    1,   -7 },   // 0x44E
  {   825,   7,   8,   9,    1,   -7 } }; // 0x44F

const GFXfont GlametrixBold12pt8b_rus PROGMEM = {
  (uint8_t  *)GlametrixBold12pt8bBitmaps_rus,
  (GFXglyph *)GlametrixBold12pt8bGlyphs_rus,
  0x410, 0x44F, 25 };

// Approx. 1287 bytes
